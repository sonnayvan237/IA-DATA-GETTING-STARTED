# -*- coding: utf-8 -*-
"""wine quality predict.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15BDi49lIJyTeZ5966qSXbC_7-tnT1uoi
"""

from google.colab import files
upload = files.upload()

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
from sklearn.preprocessing import StandardScaler, OrdinalEncoder, OneHotEncoder, StandardScaler, LabelEncoder
from sklearn.pipeline import Pipeline
from sklearn.compose import ColumnTransformer
from sklearn.impute import SimpleImputer

winequality = pd.read_csv('winequality-red.csv')
winequality



winequality.shape

winequality.info()

winequality['quality'] = pd.Categorical(winequality['quality'])
winequality.info()

y = winequality['quality']
X = winequality.drop('quality', axis=1)
xtrain, xtest, ytrain, ytest = train_test_split(X, y, test_size=0.2, random_state=42)

xtest.shape

scaler = StandardScaler()
xtrain_scaled = scaler.fit_transform(xtrain)
xtest_scaled = scaler.transform(xtest)

from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import accuracy_score

model = KNeighborsClassifier(n_neighbors=10)
model.fit(xtrain_scaled, ytrain)
model.score(xtest_scaled, ytest)
score = print(model.score(xtest_scaled, ytest))
y_pred = model.predict(xtest_scaled)
accuracy_score(ytest, y_pred)
table = np.array([10.2, 0.8, 0.52, 3, 0.082, 24.0, 60.0, 0.80, 3.32, 0.63, 8]).reshape(1, -1)  # Convert table to a NumPy array before reshaping
quality = model.predict(table)
quality
quality=model.predict(table)
quality

from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score
model = LogisticRegression()
model.fit(xtrain_scaled, ytrain)
model.score(xtest_scaled, ytest)
score = print(model.score(xtest_scaled, ytest))
y_pred = model.predict(xtest_scaled)
accuracy_score(ytest, y_pred)